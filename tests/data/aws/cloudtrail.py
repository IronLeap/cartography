import datetime
from datetime import timezone as tz

CLOUD_TRAILS = [
    {
        "Name": "Name",
        "S3BucketName": "S3BucketName",
        "S3KeyPrefix": "S3KeyPrefix",
        "SnsTopicName": "SnsTopicName",
        "SnsTopicARN": "SnsTopicARN",
        "IncludeGlobalServiceEvents": True,
        "IsMultiRegionTrail": True,
        "HomeRegion": "HomeRegion",
        "TrailARN": "TrailARN1",
        "LogFileValidationEnabled": True,
        "CloudWatchLogsLogGroupArn": "CloudWatchLogsLogGroupArn",
        "CloudWatchLogsRoleArn": "CloudWatchLogsRoleArn",
        "KmsKeyId": "KmsKeyId",
        "HasCustomEventSelectors": True,
        "HasInsightSelectors": True,
        "IsOrganizationTrail": True,
        "IsLogging": False,
    },
    {
        "Name": "Name",
        "S3BucketName": "S3BucketName",
        "S3KeyPrefix": "S3KeyPrefix",
        "SnsTopicName": "SnsTopicName",
        "SnsTopicARN": "SnsTopicARN",
        "IncludeGlobalServiceEvents": False,
        "IsMultiRegionTrail": False,
        "HomeRegion": "HomeRegion",
        "TrailARN": "TrailARN2",
        "LogFileValidationEnabled": True,
        "CloudWatchLogsLogGroupArn": "CloudWatchLogsLogGroupArn",
        "LatestCloudWatchLogsDeliveryTime": datetime.datetime(2021, 10, 12, 12, 19, 6, 294000, tzinfo=tz.utc),
        "CloudWatchLogsRoleArn": "CloudWatchLogsRoleArn",
        "KmsKeyId": "KmsKeyId",
        "HasCustomEventSelectors": True,
        "HasInsightSelectors": False,
        "IsOrganizationTrail": False,
        "IsLogging": True,
    },
]
